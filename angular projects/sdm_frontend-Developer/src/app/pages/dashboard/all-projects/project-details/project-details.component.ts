import { FormGroup, FormBuilder } from '@angular/forms'
import { Component, OnInit } from '@angular/core'
import { Router, ActivatedRoute } from '@angular/router'
@Component({
  selector: 'app-project-details',
  templateUrl: './project-details.component.html',
  styleUrls: ['./project-details.component.scss'],
})
export class ProjectDetailsComponent implements OnInit {
  customerName = JSON.parse(sessionStorage.getItem('projectDetails')).CustomerName
  tableData = [
    {
      listName: 'Scope',
      url: 'scope',
      details: '',
      src: './assets/images/cardicons/PDM_Darkblue_Scope.svg',
      tool:'Define the scope of the project through various stores / epics / story points and other other items that might be part of the BackLog Management.'
    },
    {
      listName: 'Project View',
      url: 'subProjects',
      details: '4 Sub Projects',
      src:
        './assets/images/cardicons/PDM_Darkblue_Project View.svg',
        tool:'The will display the Sub Project and Tasks within those Sub Projects and other details.'
    },
    {
      listName: 'Todo List',
      url: 'tasks',
      details: 'Task to be done in this week',
      src: './assets/images/cardicons/PDM_Darkblue_To do list.svg',
      tool:'This will contain the List of Tasks that are being assigned as part of the Project as well as tasks generated from a BPM Process.'
    },
    {
      listName: 'MileStones',
      url: 'mileStones',
      details: '2 milestones',
      src:
        './assets/images/cardicons/PDM_Darkblue_Milestone.svg',
        tool:'Mile Stone is nothing different than a task and the task has a Duration of Time Zero and the Type will change to MileStone.'
    },
    {
      listName: 'Releases',
      url: 'releases',
      details: 'release date : 20-12-2020',
      src:
        './assets/images/cardicons/PDM_Darkblue_Releases.svg',
        tool:'Define the VArious releases that exist within the Project and they become a part of the Project Plan.'
    },
    {
      listName: 'Resources',
      url: 'resource',
      details: 'Names: Ram, Raju',
      src: './assets/images/cardicons/PDM_Darkblue_Resources.svg',
      tool:'This is the Area where we can see all the Customer Resources, Miracle Internal Resources, External Resources engaged onto the Project Team.'
    },
    {
      listName: 'Infrastructure',
      url: 'infrastructure',
      details: 'SDM database down',
      src:
        './assets/images/cardicons/PDM_Darkblue_Infrastructure.svg',
        tool:'It is the mechanism to track the Project Infrastructure like the Cloud, VPC, Hosts, Containers, Clusters for the various environments and other details.'
    },
    {
      listName: 'Documents',
      url: 'documents',
      details: 'Total number of documents : 20',
      src:
        './assets/images/cardicons/PDM_Darkblue_Documents.svg',
        tool:'We should have a repository that is used for tracking all the various documents that are related to the Project.'
    },

    {
      listName: 'Issues',
      url: 'defects',
      details: '2 high priority defects',
      src:
        './assets/images/cardicons/PDM_Darkblue_Issues.svg',
        tool:'To identify and document these issues and to resolve them by reviewing and carefully considering all relevant information.'
    },
    {
      listName: 'Service Mgmt',
      url: 'serviceMgmt',
      details: 'Enhancements in pipeline',
      src: './assets/images/cardicons/PDM_Darkblue_Service Management.svg',
      tool:'Service Management is the aspect of Tracking the Enhancement Requests or Ideas or Wishes that customer / stakeholders might have on the Project Deliver Organization.'
    },
    {
      listName: 'Change Mgmt',
      url: 'changes',
      details: 'Tasks to be tracked',
      src:
        './assets/images/cardicons/PDM_Darkblue_Change Management.svg',
        tool:'Change Management is a Planned Activity that can have a direct or indirect effect on a service.'
    },

    {
      listName: 'Risks Mgmt',
      url: 'risks',
      details: '2 risks identified',

      src: './assets/images/cardicons/PDM_Darkblue_Risk Management.svg',
      tool:'We need to be able to track the various risks related to the project associated with resources, TimeLines, Infrastructure, SME, Scope Change, Testing, Performance, Non Functional'
    },
    {
      listName: 'Governance',
      url: 'governance',
      details: 'One needs attention',

      src:
        './assets/images/cardicons/PDM_Darkblue_Governance.svg',
        tool:'we will track all the Governance Reports that are auto generated by various governance tasks that are part of the Release Management.'
    },
    {
      listName: 'Meetings',
      url: 'meetings',
      details: 'Upcoming meetings',
      src:
        './assets/images/cardicons/PDM_Darkblue_Meetings.svg',
        tool:'An assembly of people for a particular purpose, especially for formal discussion.'
    },

    {
      listName: 'Escalation Matrix',
      url: 'escalation',
      details: 'One needs attention',
      src:
        './assets/images/cardicons/PDM_Darkblue_Escalation Matrix.svg',
        tool:'An escalation matrix defines who you should notify on management level for various types of issues — resource shortages, technical issues, delivery problems etc.'
    },
    {
      listName: 'SLA',
      url: 'sla',
      details: 'Number of agreements : 5',
      src: './assets/images/cardicons/PDM_Darkblue_SLA.svg',
      tool:'A service-level agreement (SLA) is a commitment between a service provider and a client. Particular aspects of the service – quality, availability, responsibilities – are agreed between the service provider and the service user'
    },
  ]
  selectedProject: any
  projectTitle: string
  ProjectName: any

  desc(path) {
    this.router.navigateByUrl('/dashboard/' + path)
    console.log('/dashboard/' + path)
  }
  gotoHome() {
    this.router.navigate(['/dashboard/allProjects'])
  }

  details() {
    this.router.navigate(['/dashboard/projectDetails', this.ProjectName])
  }
  constructor(private router: Router, private route: ActivatedRoute) {}

  ngOnInit(): void {
    this.ProjectName = JSON.parse(sessionStorage.getItem('projectDetails')).ProjectName
    this.selectedProject = this.route.params.subscribe(params => {
      this.projectTitle = params['title']
      console.log('title', this.projectTitle)
    })
  }
}
